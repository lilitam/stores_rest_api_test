{
	"info": {
		"_postman_id": "f3cd4087-866f-430b-a57d-4a3be476615a",
		"name": "user_create_store_and_item",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "/register Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0f8bc056-5f89-40cf-aaed-09abd6fbe9d6",
						"exec": [
							"tests[\"response time is less than 200\"] = responseTime < 200;",
							"",
							"var jsonData = JSON.parse(responseBody)",
							"",
							"tests[\"User created successfully\"] = jsonData.message === \"User created successfully.\"",
							"tests[\"Content-type is present in response\"] = postman.getResponseHeader('Content-Type')",
							"tests[\"Content-type in response is application/json\"] = postman.getResponseHeader(\"Content-Type\") === \"application/json\""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "JWT",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"username\": \"user1\",\n\t\"password\": \"abcxyz\"\n}"
				},
				"url": {
					"raw": "{{url}}/register",
					"host": [
						"{{url}}"
					],
					"path": [
						"register"
					],
					"query": [
						{
							"key": "",
							"value": ""
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "/auth Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "6441e59b-bd76-4df5-9b85-42b4cae3fb0d",
						"exec": [
							"var jsonData = JSON.parse(responseBody)",
							"postman.setEnvironmentVariable(\"access_token\", jsonData.access_token)",
							"",
							"tests[\"Status code is 200\"] = responseCode.code === 200",
							"tests[\"Body contains access_token\"] = responseBody.has(\"access_token\")",
							"tests[\"Response time is less then 150ms\"] = responseTime < 150"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"type": "text",
						"value": "JWT"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"username\": \"user1\",\n\t\"password\": \"abcxyz\"\n}"
				},
				"url": {
					"raw": "{{url}}/auth",
					"host": [
						"{{url}}"
					],
					"path": [
						"auth"
					]
				}
			},
			"response": []
		},
		{
			"name": "/store/test_store",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "15d8e34b-9702-4ddc-9adb-ed33a0046474",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"tests[\"Store name is returned\"] = jsonData.name === \"test_store\";",
							"tests[\"Store id is returned\"] = jsonData.id === 1;",
							"tests[\"Store items is empty\"] = jsonData.items.length === 0;",
							"",
							"tests[\"Status code is 201\"] = responseCode.code === 201;",
							"tests[\"Response time is less than 150ms\"] = responseTime < 150;",
							"",
							"tests[\"Response returnes Content-Type\"] = postman.getResponseHeader(\"Content-Type\");",
							"tests[\"Response Content-Type is application/json\"] = postman.getResponseHeader(\"Content-Type\") === \"application/json\";",
							"",
							"postman.setEnvironmentVariable(\"store_id\", jsonData.id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{url}}/store/test_store",
					"host": [
						"{{url}}"
					],
					"path": [
						"store",
						"test_store"
					]
				}
			},
			"response": []
		},
		{
			"name": "/item/test_item in test_store",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a9c1b60a-117f-4a10-a98a-63e9d609eada",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"",
							"tests[\"Item name is returned\"] = jsonData.name === \"test_item\";",
							"tests[\"Item price is returned\"] = jsonData.price === 19;",
							"",
							"tests[\"Response status code is 201\"] = responseCode.code === 201;",
							"tests[\"Response time is less than 150ms\"] = responseTime < 150;",
							"",
							"tests[\"Response has Content-Type\"] = postman.getResponseHeader(\"Content-Type\");",
							"tests[\"Content-Type is application/json\"] = postman.getResponseHeader(\"Content-Type\") === \"application/json\";"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"name\": \"test_item\",\n\t\"price\": \"19\",\n\t\"store_id\": {{store_id}}\n}"
				},
				"url": {
					"raw": "{{url}}/item/test_item",
					"host": [
						"{{url}}"
					],
					"path": [
						"item",
						"test_item"
					]
				}
			},
			"response": []
		},
		{
			"name": "/stores",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0bd9bc5d-0842-4ac9-9b65-a7dc357476c7",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"tests[\"store test_store is returned\"] = jsonData.stores[0].name === \"test_store\"",
							"",
							"tests[\"store_id of test_store is returned\"] = jsonData.stores[0].id === parseInt(environment.store_id)",
							"",
							"tests[\"Response time is less than 150ms\"] = responseTime < 150",
							"",
							"tests[\"Content-Type is in response\"] = postman.getResponseHeader(\"Content-Type\")",
							"tests[\"Content-type of response is application/json\"] = postman.getResponseHeader(\"Content-Type\") === \"application/json\"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{url}}/stores",
					"host": [
						"{{url}}"
					],
					"path": [
						"stores"
					]
				}
			},
			"response": []
		},
		{
			"name": "/item/test_item",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c33892f0-551f-4cd8-b589-5551d369314f",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"tests[\"Response has correct message\"] = jsonData.message === \"Item deleted\";",
							"tests[\"Response time is less than 150ms\"] = responseTime < 150;",
							"tests[\"response returns 200 status code\"] = responseCode.code === 200;",
							"",
							"tests[\"Content-type is present\"] = postman.getResponseHeader(\"Content-type\");",
							"tests[\"Content-Type is application/json\"] = postman.getResponseHeader(\"Content-Type\") === \"application/json\";"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{url}}/item/test_item",
					"host": [
						"{{url}}"
					],
					"path": [
						"item",
						"test_item"
					]
				}
			},
			"response": []
		}
	]
}